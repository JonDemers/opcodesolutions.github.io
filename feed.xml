<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-01-26T06:05:32-05:00</updated><id>/feed.xml</id><title type="html">OpCode Solutions</title><subtitle>Optimize Your Processes</subtitle><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><entry><title type="html">A/B Testing Landing Pages When Launching New Product</title><link href="/tech/a-b-testing-landing-pages-when-launching-new-product/" rel="alternate" type="text/html" title="A/B Testing Landing Pages When Launching New Product" /><published>2023-11-12T00:00:00-05:00</published><updated>2023-11-12T00:00:00-05:00</updated><id>/tech/a-b-testing-landing-pages-when-launching-new-product</id><content type="html" xml:base="/tech/a-b-testing-landing-pages-when-launching-new-product/"><![CDATA[<h4 id="so-you-have-a-new-product-or-service-you-are-not-sure-how-to-promote-it-online">So you have a new product or service? You are not sure how to promote it online?</h4>

<h2 id="the-problem">The Problem</h2>

<p>When launching a new product, it is sometimes hard to know in advance what key features will be the most appealing to our future customers and how to promote our product. So let’s test some variants! This is called A/B testing.</p>

<h2 id="setting-up-the-test">Setting Up The Test</h2>

<p>In our case, our SaaS File Transfer Solution has many interesting features. The test consist to select 6 prominent features of the product and create a landing page for each. Each page will focus on the selected prominent feature first, but also mention the other features. On each page, we have a “Free Trial” form inviting our prospect to try the product.</p>

<ul>
  <li><a href="/en/saas/file-transfer/affordable-file-sharing-solution/">Affordable File Sharing Solution</a></li>
  <li><a href="/en/saas/file-transfer/scalable-file-sharing-solution/">Scalable File Sharing Solution</a></li>
  <li><a href="/en/saas/file-transfer/file-sharing-automation-solution/">File Sharing Automation Solution</a></li>
  <li><a href="/en/saas/file-transfer/effortless-file-transfer-solution/">Effortless File Transfer Solution</a></li>
  <li><a href="/en/saas/file-transfer/reliable-file-transfer-solution/">Reliable File Transfer Solution</a></li>
  <li><a href="/en/saas/file-transfer/secure-file-sharing-solution/">Secure File Sharing Solution</a></li>
</ul>

<h2 id="measuring-the-results">Measuring The Results</h2>

<p>Measuring the number of signup from each landing page is the easiest way to measure the interest in the feature. With tools like Google Analytics, we can make even more detailed analysis.</p>

<h2 id="speeding-up-the-process">Speeding up the process</h2>

<p>Once the test is running, we may realize we do not get much visits to our site. With paid advertizing, we can speed things up. We just have to create 1 Ad for each variant of the landing page.</p>

<h3 id="advertisement-1">Advertisement #1</h3>

<ul>
  <li><strong>Short Headline:</strong> <a href="/en/saas/file-transfer/affordable-file-sharing-solution/">Affordable File Sharing Solution</a></li>
  <li><strong>Long Headline:</strong> Affordable File Sharing: Start at $19/Month for Professional, Feature-Rich Client Collaborations.</li>
  <li><strong>Description:</strong> Experience top-tier file sharing without breaking the bank. Elevate client collaborations starting at just $19/month!</li>
</ul>

<h3 id="advertisement-2">Advertisement #2</h3>

<ul>
  <li><strong>Short Headline:</strong> <a href="/en/saas/file-transfer/scalable-file-sharing-solution/">Scalable File Sharing Solution</a></li>
  <li><strong>Long Headline:</strong> Scalable File Sharing: Unlimited Users, Admins for Seamless, Scalable File Sharing with Clients.</li>
  <li><strong>Description:</strong> Expand your client connections seamlessly. Our scalable solution adapts to your growing file sharing needs.</li>
</ul>

<h3 id="advertisement-3">Advertisement #3</h3>

<ul>
  <li><strong>Short Headline:</strong> <a href="/en/saas/file-transfer/file-sharing-automation-solution/">File Sharing Automation Solution</a></li>
  <li><strong>Long Headline:</strong> File Sharing Automation: APIs, Integration, High-Speed File Transfers for Effortless File Sharing with Clients.</li>
  <li><strong>Description:</strong> Boost productivity with file transfer automations. Integrate seamlessly for efficient client collaborations. Try it now!</li>
</ul>

<h3 id="advertisement-4">Advertisement #4</h3>

<ul>
  <li><strong>Short Headline:</strong> <a href="/en/saas/file-transfer/effortless-file-transfer-solution/">Effortless File Transfer Solution</a></li>
  <li><strong>Long Headline:</strong> Effortless File Transfer: Centralized Management, Organized Folders, User-Friendly Interface.</li>
  <li><strong>Description:</strong> Simplify client collaborations with our easy-to-use solution. Organize, share, and impress with every file transfer.</li>
</ul>

<h3 id="advertisement-5">Advertisement #5</h3>

<ul>
  <li><strong>Short Headline:</strong> <a href="/en/saas/file-transfer/reliable-file-transfer-solution/">Reliable File Transfer Solution</a></li>
  <li><strong>Long Headline:</strong> Reliable File Transfer: Professional, Easy-to-Use, Dependable Solutions for Client Interactions.</li>
  <li><strong>Description:</strong> Choose reliability for client file transfers. Our SaaS solution ensures every file is delivered with utmost professionalism.</li>
</ul>

<h3 id="advertisement-6">Advertisement #6</h3>

<ul>
  <li><strong>Short Headline:</strong> <a href="/en/saas/file-transfer/secure-file-sharing-solution/">Secure File Sharing Solution</a></li>
  <li><strong>Long Headline:</strong> Secure File Sharing: Authenticated, Encrypted, Reliable Transfers for Client Collaboration.</li>
  <li><strong>Description:</strong> Trust our SaaS for secure and professional file transfers. Elevate client collaboration with peace of mind.</li>
</ul>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[So you have a new product or service? You are not sure how to promote it online?]]></summary></entry><entry><title type="html">Apache Reverse Proxy with Secure TLS WebSocket (wss://)</title><link href="/tech/apache-reverse-proxy-with-secure-tls-websocket-wss/" rel="alternate" type="text/html" title="Apache Reverse Proxy with Secure TLS WebSocket (wss://)" /><published>2022-12-13T00:00:00-05:00</published><updated>2022-12-13T00:00:00-05:00</updated><id>/tech/apache-reverse-proxy-with-secure-tls-websocket-wss</id><content type="html" xml:base="/tech/apache-reverse-proxy-with-secure-tls-websocket-wss/"><![CDATA[<p>Configuring Apache reverse proxy with WebSocket can be tricky. It is even trickier if the WebSocket is secured with TLS (wss://). Here is how to do it.</p>

<h2 id="step-1-enable-required-apache-modules">Step 1. Enable required apache modules</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>a2enmod ssl
<span class="nb">sudo </span>a2enmod proxy
<span class="nb">sudo </span>a2enmod proxy_http
<span class="nb">sudo </span>a2enmod proxy_wstunnel
<span class="nb">sudo </span>a2enmod rewrite
</code></pre></div></div>

<h2 id="step-2-apache-configuration">Step 2. Apache configuration</h2>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
  <span class="c"># Depending on the proxied-host, you may need some or all of this</span>
  <span class="nc">SSLProxyEngine</span> <span class="ss">on</span>
  <span class="c"># SSLProxyVerify none </span>
  <span class="c"># SSLProxyCheckPeerCN off</span>
  <span class="c"># SSLProxyCheckPeerName off</span>
  <span class="c"># SSLProxyCheckPeerExpire off</span>

  <span class="c"># This is for secure TLS WebSocket reverse proxy (wss://)</span>
  <span class="nc">RewriteEngine</span> <span class="ss">On</span>
  <span class="nc">RewriteCond</span> %{HTTP:Upgrade} =websocket [NC]
  <span class="nc">RewriteRule</span> /(.*) wss://proxied-host:port/$1 [P,L]

  <span class="c"># This is for regular HTTPS reverse proxy</span>
  <span class="nc">ProxyRequests</span> <span class="ss">Off</span>
  <span class="nc">ProxyPreserveHost</span> <span class="ss">On</span>
  <span class="nc">ProxyPass</span> / https://proxied-host:port/
  <span class="nc">ProxyPassReverse</span> / https://proxied-host:port/

</code></pre></div></div>

<h2 id="if-the-websocket-is-not-secure-ws">If the WebSocket is <em>not</em> Secure (ws://)</h2>

<p>It is simpler if the WebSocket is <em>not</em> secure:</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
  <span class="c"># This is for WebSocket reverse proxy (ws://)</span>
  <span class="nc">RewriteEngine</span> <span class="ss">On</span>
  <span class="nc">RewriteCond</span> %{HTTP:Upgrade} =websocket [NC]
  <span class="nc">RewriteRule</span> /(.*) ws://proxied-host:port/$1 [P,L]

  <span class="c"># This is for regular HTTP reverse proxy</span>
  <span class="nc">ProxyRequests</span> <span class="ss">Off</span>
  <span class="nc">ProxyPreserveHost</span> <span class="ss">On</span>
  <span class="nc">ProxyPass</span> / http://proxied-host:port/
  <span class="nc">ProxyPassReverse</span> / http://proxied-host:port/

</code></pre></div></div>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[Configuring Apache reverse proxy with WebSocket can be tricky. It is even trickier if the WebSocket is secured with TLS (wss://). Here is how to do it.]]></summary></entry><entry><title type="html">Debian -bash: envsubst: command not found</title><link href="/tech/debian-bash-envsubst-command-not-found/" rel="alternate" type="text/html" title="Debian -bash: envsubst: command not found" /><published>2022-12-04T00:00:00-05:00</published><updated>2022-12-04T00:00:00-05:00</updated><id>/tech/debian-bash-envsubst-command-not-found</id><content type="html" xml:base="/tech/debian-bash-envsubst-command-not-found/"><![CDATA[<h2 id="solution">Solution</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>gettext-base
</code></pre></div></div>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[Solution]]></summary></entry><entry><title type="html">Script to automate VM creation on Proxmox VE</title><link href="/tech/script-to-automate-vm-creation-on-proxmox-ve/" rel="alternate" type="text/html" title="Script to automate VM creation on Proxmox VE" /><published>2022-12-02T00:00:00-05:00</published><updated>2022-12-02T00:00:00-05:00</updated><id>/tech/script-to-automate-vm-creation-on-proxmox-ve</id><content type="html" xml:base="/tech/script-to-automate-vm-creation-on-proxmox-ve/"><![CDATA[<p>This script will create a VM on Proxmox VE without requiring any user interation. Upon completion, you’ll be able to ssh to the VM with your ssh key, just like you’d do with a VM hosted on a major cloud provider like AWS.</p>

<p>You’ll need an OS <em>cloud image</em> for this, it will install the OS without any user interaction. We’ll use Debian cloud image, but you can use a cloud image of any distro.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget https://cloud.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2
</code></pre></div></div>

<p>It has 2GB disk space by default, but you can <a href="/tech/increase-disk-size-of-debian-cloud-image/">Increase disk size of cloud image</a> before running the script.</p>

<h2 id="step-1-the-script">Step 1. The Script</h2>

<p>We’ll copy-paste this script in a file <code class="language-plaintext highlighter-rouge">create-vm.sh</code>. You can read comments in the script for more details.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="c"># Exit on error</span>
<span class="nb">set</span> <span class="nt">-e</span>

<span class="k">if</span> <span class="o">[</span> <span class="s2">"$#"</span> <span class="nt">-ne</span> 7 <span class="o">]</span><span class="p">;</span> <span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"Usage: </span><span class="nv">$0</span><span class="s2"> &lt;id&gt; &lt;name&gt; &lt;memory&gt; &lt;cores&gt; &lt;image&gt; &lt;ciuser&gt; &lt;sshkey&gt;"</span>
  <span class="nb">exit </span>1
<span class="k">fi

</span><span class="nb">id</span><span class="o">=</span><span class="nv">$1</span>
<span class="nv">name</span><span class="o">=</span><span class="nv">$2</span>
<span class="nv">memory</span><span class="o">=</span><span class="nv">$3</span>
<span class="nv">cores</span><span class="o">=</span><span class="nv">$4</span>
<span class="nv">image</span><span class="o">=</span><span class="nv">$5</span>
<span class="nv">ciuser</span><span class="o">=</span><span class="nv">$6</span>
<span class="nv">sshkey</span><span class="o">=</span><span class="nv">$7</span>

<span class="nb">echo </span>Creating VM using parameters:
<span class="nb">echo id</span><span class="o">=</span><span class="nv">$id</span>
<span class="nb">echo </span><span class="nv">name</span><span class="o">=</span><span class="nv">$name</span>
<span class="nb">echo </span><span class="nv">memory</span><span class="o">=</span><span class="nv">$memory</span>
<span class="nb">echo </span><span class="nv">cores</span><span class="o">=</span><span class="nv">$cores</span>
<span class="nb">echo </span><span class="nv">image</span><span class="o">=</span><span class="nv">$image</span>
<span class="nb">echo </span><span class="nv">ciuser</span><span class="o">=</span><span class="nv">$ciuser</span>
<span class="nb">echo </span><span class="nv">sshkey</span><span class="o">=</span><span class="nv">$sshkey</span>

<span class="c"># Print commands that are executed (facilitates debugging)</span>
<span class="nb">set</span> <span class="nt">-x</span>

<span class="c"># Destroy the VM if it exists</span>
qm stop <span class="nv">$id</span> <span class="o">||</span> <span class="nb">true
</span>qm destroy <span class="nv">$id</span> <span class="nt">-purge</span> 1 <span class="o">||</span> <span class="nb">true</span>

<span class="c"># Create the VM</span>
qm create <span class="nv">$id</span>
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--name</span> <span class="nv">$name</span>
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--memory</span> <span class="nv">$memory</span>
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--cores</span> <span class="nv">$cores</span>
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--net0</span> virtio,bridge<span class="o">=</span>vmbr0
qm importdisk <span class="nv">$id</span> <span class="nv">$image</span> local-lvm
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--scsihw</span> virtio-scsi-pci
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--scsi0</span> local-lvm:vm-<span class="nv">$id</span><span class="nt">-disk-0</span>
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--ide2</span> local-lvm:cloudinit
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--ciuser</span> <span class="nv">$ciuser</span>
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--sshkey</span> <span class="nv">$sshkey</span>
qm <span class="nb">set</span> <span class="nv">$id</span> <span class="nt">--serial0</span> socket <span class="nt">--vga</span> serial0

<span class="c"># Start the VM for the first time, this will install the OS from the cloud image</span>
qm start <span class="nv">$id</span>

<span class="c"># Reboot for a clean start</span>
<span class="nb">sleep </span>60
qm reboot <span class="nv">$id</span>
</code></pre></div></div>

<p>We make the script executable</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod</span> +x create-vm.sh
</code></pre></div></div>

<h2 id="step-2-run-the-script">Step 2. Run the Script</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./create-vm.sh 999 debian-999 4096 2 debian-11-genericcloud-amd64.qcow2 jdemers jdemers.id_rsa.pub
</code></pre></div></div>

<h2 id="step-3-ssh-to-your-vm">Step 3. SSH to your VM</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh debian-999
</code></pre></div></div>

<h2 id="step-4-automate-vm-setup-with-ansible">Step 4. Automate VM setup with ansible…</h2>

<p>Not in scope of this article</p>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[This script will create a VM on Proxmox VE without requiring any user interation. Upon completion, you’ll be able to ssh to the VM with your ssh key, just like you’d do with a VM hosted on a major cloud provider like AWS.]]></summary></entry><entry><title type="html">Debian -bash: netstat: command not found</title><link href="/tech/debian-bash-netstat-command-not-found/" rel="alternate" type="text/html" title="Debian -bash: netstat: command not found" /><published>2022-12-01T00:00:00-05:00</published><updated>2022-12-01T00:00:00-05:00</updated><id>/tech/debian-bash-netstat-command-not-found</id><content type="html" xml:base="/tech/debian-bash-netstat-command-not-found/"><![CDATA[<h2 id="solution">Solution</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt <span class="nb">install </span>net-tools
</code></pre></div></div>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[Solution]]></summary></entry><entry><title type="html">Increase disk size of Debian cloud image</title><link href="/tech/increase-disk-size-of-debian-cloud-image/" rel="alternate" type="text/html" title="Increase disk size of Debian cloud image" /><published>2022-12-01T00:00:00-05:00</published><updated>2022-12-01T00:00:00-05:00</updated><id>/tech/increase-disk-size-of-debian-cloud-image</id><content type="html" xml:base="/tech/increase-disk-size-of-debian-cloud-image/"><![CDATA[<p>Generic Debian cloud images come with small disk size by default: <strong>2GB</strong>. We can resize/increase the disk storage after the VM is created, but this is not convenient because we’d have to do this for each VM we create.</p>

<p>A better solution is to convert the could image to have bigger disk size by default. In this article we’ll create an Debian cloud image with <strong>32GB</strong> of storage.</p>

<h2 id="step-1-get-the-generic-debian-cloud-image">Step 1. Get the Generic Debian cloud image</h2>

<p>Get the image</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># wget https://cloud.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2
</code></pre></div></div>

<p>Validate the checksum, checksum are here: <a href="https://cloud.debian.org/images/cloud/bullseye/latest/SHA512SUMS">https://cloud.debian.org/images/cloud/bullseye/latest/SHA512SUMS</a></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># sha512sum debian-11-genericcloud-amd64.qcow2

71f1c376e585a87299f751e076689d7ebe2a897649b65071878eb5694be76b771f37c21d7a88630214f4650dec5307e9f73d597ec326f99bd3451e23f607e5b8  debian-11-genericcloud-amd64.qcow2
</code></pre></div></div>

<p>Current image size is <strong>2GB</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># qemu-img info debian-11-genericcloud-amd64.qcow2

image: debian-11-genericcloud-amd64.qcow2
file format: qcow2
virtual size: 2 GiB (2147483648 bytes)
disk size: 236 MiB
cluster_size: 65536
Format specific information:
    compat: 1.1
    compression type: zlib
    lazy refcounts: false
    refcount bits: 16
    corrupt: false
    extended l2: false
</code></pre></div></div>

<h2 id="step-2-increase-image-size">Step 2. Increase image size</h2>

<p>Use qemu-img to resize the image</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># qemu-img resize debian-11-genericcloud-amd64.qcow2 32G

Image resized.
</code></pre></div></div>

<h2 id="step-3-increase-partition-size-to-match-image-size">Step 3. Increase partition size to match image size</h2>

<p>Mount partition with nbd</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># modprobe nbd max_part=10
# qemu-nbd -c /dev/nbd0 debian-11-genericcloud-amd64.qcow2
</code></pre></div></div>

<p>Install parted</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># apt -y install parted
</code></pre></div></div>

<p>Print and fix partition with parted. Press <strong>F</strong> to Fix the warning</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># parted /dev/nbd0 print free

Warning: Not all of the space available to /dev/nbd0 appears to be used, you can fix the GPT to use all of the space (an extra 62914560 blocks) or continue with the current setting?
Fix/Ignore? F
Model: Unknown (unknown)
Disk /dev/nbd0: 34.4GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Disk Flags:

Number  Start   End     Size    File system  Name  Flags
        17.4kB  1049kB  1031kB  Free Space
14      1049kB  4194kB  3146kB                     bios_grub
15      4194kB  134MB   130MB   fat16              boot, esp
 1      134MB   2147MB  2013MB  ext4
        2147MB  34.4GB  32.2GB  Free Space
</code></pre></div></div>

<p>Resize partition and print its new size</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># parted -s /dev/nbd0 "resizepart 1 100%" quit
# parted /dev/nbd0 print free

Model: Unknown (unknown)
Disk /dev/nbd0: 34.4GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Disk Flags:

Number  Start   End     Size    File system  Name  Flags
        17.4kB  1049kB  1031kB  Free Space
14      1049kB  4194kB  3146kB                     bios_grub
15      4194kB  134MB   130MB   fat16              boot, esp
 1      134MB   34.4GB  34.2GB  ext4
</code></pre></div></div>

<h2 id="step-4-increase-filesystem-to-match-partition-size">Step 4. Increase filesystem to match partition size</h2>

<p>Use resize2fs to resize filesystem</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># resize2fs /dev/nbd0p1

resize2fs 1.46.5 (30-Dec-2021)
Resizing the filesystem on /dev/nbd0p1 to 8355835 (4k) blocks.
The filesystem on /dev/nbd0p1 is now 8355835 (4k) blocks long.
</code></pre></div></div>

<p>Unmount nbd</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># qemu-nbd -d /dev/nbd0

/dev/nbd0 disconnected
</code></pre></div></div>

<h2 id="step-5-verify-new-cloud-image-size-is-32gb">Step 5. Verify new cloud image size is 32GB</h2>

<p>New image size is 32GB</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># qemu-img info debian-11-genericcloud-amd64.qcow2

image: debian-11-genericcloud-amd64.qcow2
file format: qcow2
virtual size: 32 GiB (34359738368 bytes)
disk size: 240 MiB
cluster_size: 65536
Format specific information:
    compat: 1.1
    compression type: zlib
    lazy refcounts: false
    refcount bits: 16
    corrupt: false
    extended l2: false
</code></pre></div></div>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[Generic Debian cloud images come with small disk size by default: 2GB. We can resize/increase the disk storage after the VM is created, but this is not convenient because we’d have to do this for each VM we create.]]></summary></entry><entry><title type="html">How to Migrate 3 MySQL Databases to Amazon RDS in 5 Minutes</title><link href="/tech/how-to-migrate-3-mysql-databases-to-amazon-rds-in-5-minutes/" rel="alternate" type="text/html" title="How to Migrate 3 MySQL Databases to Amazon RDS in 5 Minutes" /><published>2014-12-23T00:00:00-05:00</published><updated>2014-12-23T00:00:00-05:00</updated><id>/tech/how-to-migrate-3-mysql-databases-to-amazon-rds-in-5-minutes</id><content type="html" xml:base="/tech/how-to-migrate-3-mysql-databases-to-amazon-rds-in-5-minutes/"><![CDATA[<p>I had a LAMT (Linux-Apache-MySQL-Tomcat) on <a href="https://aws.amazon.com/ec2/">Amazon EC2</a> and I wanted to move all remaining MySQL databases (3) to an existing <a href="https://aws.amazon.com/rds/">Amazon RDS</a> instance. This would allow me to shutdown the MySQL instance on EC2, freeing RAM for Tomcat and leveraging RDS automated backups for those 3 databases in case of a disaster. The databases to migrate only contain low volume TEST data, but I already have that RDS instance, so why not use it?</p>

<p>I also have a SLA with my clients that allows me to perform <em>“Standard daily maintenance”</em>. Basically, the <em>“Standard daily maintenance”</em> must be performed outside business hours and must last <strong>at most 15 minutes</strong>.</p>

<p>The key to the success of this migration was to <strong>prepare</strong>, <strong>prepare</strong> and <strong>prepare</strong> before the actual migration. So here is what I did before the migration:</p>

<ul>
  <li>Create 3 empty databases and users on the RDS instance</li>
  <li>Prepare new configuration files with the new JDBC url pointing to the RDS instance</li>
  <li>Prepare all the commands that must be executed</li>
  <li>Review and test the commands as needed</li>
</ul>

<p>Now that I am prepared I just need to wait for the <em>“Standard daily maintenance”</em> time. Then, I just copy and paste the commands in a terminal. I prefer to copy/paste the commands one by one, so if any command fails (for any reason), it can be fixed right away before running the next commands. Here is a summary of the commands:</p>

<ol>
  <li>Shutdown Tomcat</li>
  <li><a href="https://www.thegeekstuff.com/2008/09/backup-and-restore-mysql-database-using-mysqldump/">MySQL dump/restore</a> from EC2 to RDS (3 databases)</li>
  <li>Copy the configuration files with JDBC url pointing to RDS (3 files)</li>
  <li><a href="https://askubuntu.com/questions/40072/how-to-stop-apache2-mysql-from-starting-automatically-as-computer-starts">Prevent MySQL from starting during boot</a>: echo manual &gt; /etc/init/mysql.override</li>
  <li>sudo reboot (I want to verify that MySQL on EC2 won’t start after a reboot)</li>
</ol>

<p>Everything went fine. After reboot, the MySQL instance on EC2 was not started, as expected. The Tomcat webapps were fine as well and there is more free RAM for Tomcat.</p>

<p>For those webapps, I have <a href="https://www.pingdom.com/">uptime monitoring at one minute interval with Pingdom</a>. I receive emails when a webapp go down and up again. Here is the “UP” email from Pingdom, showing <strong>5 minutes of downtime</strong> for that migration:</p>

<p><em>OpCode is UP again at 12/22/2014 08:25:36PM, after <strong>5m of downtime</strong>.</em></p>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[I had a LAMT (Linux-Apache-MySQL-Tomcat) on Amazon EC2 and I wanted to move all remaining MySQL databases (3) to an existing Amazon RDS instance. This would allow me to shutdown the MySQL instance on EC2, freeing RAM for Tomcat and leveraging RDS automated backups for those 3 databases in case of a disaster. The databases to migrate only contain low volume TEST data, but I already have that RDS instance, so why not use it?]]></summary></entry><entry><title type="html">ImageIO.read() causes OutOfMemoryError</title><link href="/tech/imageio-read-causes-outofmemoryerror/" rel="alternate" type="text/html" title="ImageIO.read() causes OutOfMemoryError" /><published>2014-11-24T00:00:00-05:00</published><updated>2014-11-24T00:00:00-05:00</updated><id>/tech/imageio-read-causes-outofmemoryerror</id><content type="html" xml:base="/tech/imageio-read-causes-outofmemoryerror/"><![CDATA[<h2 id="the-problem">The problem</h2>

<p>Few days ago, a reader contacted me with a problem he had in a piece of code. The code was creating thumbnails from images and was throwing an <code class="language-plaintext highlighter-rouge">OutOfMemoryError</code> after few dozens of images. Here is the simplified code, line 26 <code class="language-plaintext highlighter-rouge">ImageIO.read(file)</code>, throws <code class="language-plaintext highlighter-rouge">OutOfMemoryError</code>:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.opcodesolutions.demo</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.image.BufferedImage</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Thumbnails</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>

        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Image</span><span class="o">&gt;</span> <span class="n">thumbnails</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

        <span class="k">for</span> <span class="o">(</span><span class="nc">File</span> <span class="n">file</span> <span class="o">:</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"/path/to/images/"</span><span class="o">).</span><span class="na">listFiles</span><span class="o">())</span> <span class="o">{</span>

            <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">endsWith</span><span class="o">(</span><span class="s">".jpg"</span><span class="o">))</span> <span class="o">{</span>
                <span class="c1">// File is NOT a JPEG</span>
                <span class="k">continue</span><span class="o">;</span>
            <span class="o">}</span>

            <span class="nc">BufferedImage</span> <span class="n">fullSizeImage</span> <span class="o">=</span> <span class="nc">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">file</span><span class="o">);</span> <span class="c1">// OutOfMemoryError</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">fullSizeImage</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">// Could not parse JPEG, just ignore</span>
                <span class="k">continue</span><span class="o">;</span>
            <span class="o">}</span>

            <span class="c1">// Create thumbnail</span>
            <span class="nc">Image</span> <span class="n">thumbnail</span> <span class="o">=</span> <span class="n">fullSizeImage</span>
                <span class="o">.</span><span class="na">getScaledInstance</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">150</span><span class="o">,</span> <span class="nc">Image</span><span class="o">.</span><span class="na">SCALE_DEFAULT</span><span class="o">);</span>
            <span class="n">thumbnails</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">thumbnail</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="c1">// Do more stuff with thumbnails</span>

    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<p>And here is the stacktrace with the <code class="language-plaintext highlighter-rouge">OutOfMemoryError</code>:</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Exception</span> <span class="n">in</span> <span class="n">thread</span> <span class="s">"main"</span> <span class="n">java</span><span class="o">.</span><span class="na">lang</span><span class="o">.</span><span class="na">OutOfMemoryError</span><span class="o">:</span> <span class="nc">Java</span> <span class="n">heap</span> <span class="n">space</span>
    <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">awt</span><span class="o">.</span><span class="na">image</span><span class="o">.</span><span class="na">DataBufferByte</span><span class="o">.&lt;</span><span class="n">init</span><span class="o">&gt;(</span><span class="nc">DataBufferByte</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">92</span><span class="o">)</span>
    <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">awt</span><span class="o">.</span><span class="na">image</span><span class="o">.</span><span class="na">ComponentSampleModel</span><span class="o">.</span><span class="na">createDataBuffer</span><span class="o">(</span><span class="nc">ComponentSampleModel</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">415</span><span class="o">)</span>
    <span class="n">at</span> <span class="n">java</span><span class="o">.</span><span class="na">awt</span><span class="o">.</span><span class="na">image</span><span class="o">.</span><span class="na">Raster</span><span class="o">.</span><span class="na">createWritableRaster</span><span class="o">(</span><span class="nc">Raster</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">941</span><span class="o">)</span>
    <span class="n">at</span> <span class="n">javax</span><span class="o">.</span><span class="na">imageio</span><span class="o">.</span><span class="na">ImageTypeSpecifier</span><span class="o">.</span><span class="na">createBufferedImage</span><span class="o">(</span><span class="nc">ImageTypeSpecifier</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">1073</span><span class="o">)</span>
    <span class="n">at</span> <span class="n">javax</span><span class="o">.</span><span class="na">imageio</span><span class="o">.</span><span class="na">ImageReader</span><span class="o">.</span><span class="na">getDestination</span><span class="o">(</span><span class="nc">ImageReader</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">2896</span><span class="o">)</span>
    <span class="n">at</span> <span class="n">com</span><span class="o">.</span><span class="na">sun</span><span class="o">.</span><span class="na">imageio</span><span class="o">.</span><span class="na">plugins</span><span class="o">.</span><span class="na">jpeg</span><span class="o">.</span><span class="na">JPEGImageReader</span><span class="o">.</span><span class="na">readInternal</span><span class="o">(</span><span class="nc">JPEGImageReader</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">1066</span><span class="o">)</span>
    <span class="n">at</span> <span class="n">com</span><span class="o">.</span><span class="na">sun</span><span class="o">.</span><span class="na">imageio</span><span class="o">.</span><span class="na">plugins</span><span class="o">.</span><span class="na">jpeg</span><span class="o">.</span><span class="na">JPEGImageReader</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="nc">JPEGImageReader</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">1034</span><span class="o">)</span>
    <span class="n">at</span> <span class="n">javax</span><span class="o">.</span><span class="na">imageio</span><span class="o">.</span><span class="na">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="nc">ImageIO</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">1448</span><span class="o">)</span>
    <span class="n">at</span> <span class="n">javax</span><span class="o">.</span><span class="na">imageio</span><span class="o">.</span><span class="na">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="nc">ImageIO</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">1308</span><span class="o">)</span>
    <span class="n">at</span> <span class="n">com</span><span class="o">.</span><span class="na">opcodesolutions</span><span class="o">.</span><span class="na">demo</span><span class="o">.</span><span class="na">Thumbnails</span><span class="o">.</span><span class="na">main</span><span class="o">(</span><span class="nc">Thumbnails</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">26</span><span class="o">)</span>
</code></pre></div></div>

<h2 id="the-cause-of-the-outofmemoryerror">The cause of the OutOfMemoryError</h2>

<p>The cause of that problem is not obvious. The stacktrace (and the title of this article) is somewhat misleading. Here is what happens: The call to <code class="language-plaintext highlighter-rouge">fullSizeImage.getScaledInstance()</code> (lines 33-34) produces a smaller image thumbnail, but that thumbnail object keeps a reference to the <code class="language-plaintext highlighter-rouge">fullSizeImage</code>. Since JPEG files are highly compressed, reading and parsing them takes a significant amount of memory and that memory can never be freed.</p>

<h2 id="the-solution-do-not-use-imagegetscaledinstance">The solution: Do not use Image.getScaledInstance()</h2>

<p>The solution was to replace the call to <code class="language-plaintext highlighter-rouge">fullSizeImage.getScaledInstance()</code> with the lines 34-38 highlighted below. That solution allowed the code to read thousands of images, because the <code class="language-plaintext highlighter-rouge">fullSizeImage</code> was no longer kept in memory.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.opcodesolutions.demo</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.awt.Graphics2D</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.Image</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.awt.image.BufferedImage</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">javax.imageio.ImageIO</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Thumbnails</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>

        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Image</span><span class="o">&gt;</span> <span class="n">thumbnails</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

        <span class="k">for</span> <span class="o">(</span><span class="nc">File</span> <span class="n">file</span> <span class="o">:</span> <span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"/path/to/images/"</span><span class="o">).</span><span class="na">listFiles</span><span class="o">())</span> <span class="o">{</span>

            <span class="k">if</span> <span class="o">(!</span><span class="n">file</span><span class="o">.</span><span class="na">getName</span><span class="o">().</span><span class="na">endsWith</span><span class="o">(</span><span class="s">".jpg"</span><span class="o">))</span> <span class="o">{</span>
                <span class="c1">// File is NOT a JPEG</span>
                <span class="k">continue</span><span class="o">;</span>
            <span class="o">}</span>

            <span class="nc">BufferedImage</span> <span class="n">fullSizeImage</span> <span class="o">=</span> <span class="nc">ImageIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">fullSizeImage</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">// Could not parse JPEG, just ignore</span>
                <span class="k">continue</span><span class="o">;</span>
            <span class="o">}</span>

            <span class="c1">// Create thumbnail</span>
            <span class="nc">BufferedImage</span> <span class="n">thumbnail</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedImage</span><span class="o">(</span><span class="mi">150</span><span class="o">,</span> <span class="mi">150</span><span class="o">,</span>
                <span class="nc">BufferedImage</span><span class="o">.</span><span class="na">TYPE_INT_ARGB</span><span class="o">);</span>
            <span class="nc">Graphics2D</span> <span class="n">g</span> <span class="o">=</span> <span class="n">thumbnail</span><span class="o">.</span><span class="na">createGraphics</span><span class="o">();</span>
            <span class="n">g</span><span class="o">.</span><span class="na">drawImage</span><span class="o">(</span><span class="n">fullSizeImage</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">150</span><span class="o">,</span> <span class="mi">150</span><span class="o">,</span> <span class="kc">null</span><span class="o">);</span>
            <span class="n">g</span><span class="o">.</span><span class="na">dispose</span><span class="o">();</span>
            <span class="n">thumbnails</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">thumbnail</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="c1">// Do more stuff with thumbnails</span>

    <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<h2 id="references">References</h2>

<p>From Oracle’s website: <a href="https://www.oracle.com/java/technologies/java2d.html#Q_How_do_I_create_a_resized_copy">How do I create a resized copy of an image?</a></p>

<p>For this particular problem, I did not need to produce a heap dump, because the code was small enough. With a few tests and a few searches on Google, I could figure-out what was happening. However, if you have no idea where the <code class="language-plaintext highlighter-rouge">OutOfMemoryError</code> comes from, you may want to read this article: <a href="/tech/solve-java-lang-outofmemoryerror-java-heap-space/">How to fix java.lang.OutOfMemoryError: Java heap space</a>.</p>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[The problem]]></summary></entry><entry><title type="html">HTTPS Wildcard Subdomain: DNS + Apache + Tomcat Config</title><link href="/tech/https-wildcard-subdomain-dns-apache-tomcat-config/" rel="alternate" type="text/html" title="HTTPS Wildcard Subdomain: DNS + Apache + Tomcat Config" /><published>2014-11-19T00:00:00-05:00</published><updated>2014-11-19T00:00:00-05:00</updated><id>/tech/https-wildcard-subdomain-dns-apache-tomcat-config</id><content type="html" xml:base="/tech/https-wildcard-subdomain-dns-apache-tomcat-config/"><![CDATA[<p>I recently had to configure HTTPS on a wildcard subdomain with Apache HTTP server as reverse proxy to a Tomcat backend. I had few more requirements:</p>

<ol>
  <li>Redirect all <strong>http</strong> traffic to <strong>https</strong> and preserve the subdomain (hostname). For instance:
    <ul>
      <li>http://<strong>sub1</strong>.example.com/ -&gt; redirect to -&gt; http<strong>s</strong>://<strong>sub1</strong>.example.com/</li>
      <li>http://<strong>sub2</strong>.example.com/ -&gt; redirect to -&gt; http<strong>s</strong>://<strong>sub2</strong>.example.com/</li>
      <li>etc.</li>
    </ul>
  </li>
  <li>I want to have a <strong>PHP</strong> wiki on the subdirectory <code class="language-plaintext highlighter-rouge">/wiki</code> and I want to send the rest of the traffic to Tomcat.</li>
  <li><strong>Tomcat</strong> needs to know the subdomain (hostname) and will serve content accordingly.</li>
  <li>I don’t know the subdomains in advance because they are <strong>chosen by users</strong>, just like *.wordpress.com</li>
</ol>

<p>Few parts were not trivial, so I will share my setup.</p>

<h2 id="dns-wildcard-subdomain-configuration">DNS Wildcard Subdomain Configuration</h2>

<p>DNS is probably the easiest part. Nowadays, most domain registrar offer good DNS support for free with your domain. If that is not the case of your registrar, you may want to consider namecheap. Their <a href="https://www.namecheap.com/support/knowledgebase/article.aspx/597/10/how-can-i-set-up-a-catchall-wildcard-subdomain">DNS also support wildcard entries</a>. Otherwise, you can use the popular <strong>Bind DNS server</strong>. Here is how to configure a wildcard entry in BIND. Change 55.55.55.55 with your IP address.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>*    IN    A    55.55.55.55
</code></pre></div></div>

<h2 id="apache-wildcard-subdomain-configuration">Apache Wildcard Subdomain Configuration</h2>

<p>This was trickier. The Apache HTTP server configuration has 2 main parts.</p>

<ol>
  <li><strong>HTTP (port 80)</strong>: We use mod_rewrite to redirect all traffic for *.example.com to https (port 443) and we preserve the hostname with the %{HTTP_HOST} variable.</li>
  <li><strong>HTTPS (port 443)</strong>: Except for the PHP subdirectory (/wiki), we reverse proxy all traffic to Tomcat, which listen on port 9090 of localhost.</li>
</ol>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Allow non-SNI clients</span>
<span class="nc">SSLStrictSNIVHostCheck</span> <span class="ss">off</span>

<span class="c"># HTTP configuration</span>
<span class="p">&lt;</span><span class="nl">VirtualHost</span><span class="sr"> *:80</span><span class="p">&gt;
</span>
    <span class="nc">ServerName</span> example.com

    <span class="c"># Wildcard subdomain</span>
    <span class="nc">ServerAlias</span> *.example.com

    <span class="nc">ServerAdmin</span> info@example.com

    <span class="c"># Permanent redirect (301) to HTTPS and preserve</span>
    <span class="c"># hostname (but do not preserve path)</span>
    <span class="nc">RewriteEngine</span> <span class="ss">On</span>
    <span class="nc">RewriteRule</span> .* https://%{HTTP_HOST}/? [R=301,L]
<span class="p">&lt;/</span><span class="nl">VirtualHost</span><span class="p">&gt;
</span>
<span class="c"># HTTPS configuration</span>
<span class="p">&lt;</span><span class="nl">VirtualHost</span><span class="sr"> *:443</span><span class="p">&gt;
</span>
    <span class="nc">ServerName</span> example.com

    <span class="c"># Wildcard subdomain</span>
    <span class="nc">ServerAlias</span> *.example.com

    <span class="nc">ServerAdmin</span> info@example.com

    <span class="c"># PHP Wiki on path /wiki</span>
    <span class="nc">Alias</span> /wiki /opt/example.com/php/wiki
    <span class="p">&lt;</span><span class="nl">Directory</span><span class="sr"> /opt/example.com/php/wiki</span><span class="p">&gt;
</span>        <span class="nc">AllowOverride</span> <span class="ss">All</span>
        <span class="nc">Require</span> <span class="ss">all</span> granted
    <span class="p">&lt;/</span><span class="nl">Directory</span><span class="p">&gt;
</span>
    <span class="c"># Reverse proxy everything to Tomcat except for /wiki</span>
    <span class="nc">ProxyRequests</span> <span class="ss">Off</span>
    <span class="nc">ProxyPass</span> /wiki !
    <span class="nc">ProxyPass</span> / http://localhost:9090/
    <span class="nc">ProxyPassReverse</span> / http://localhost:9090/

    <span class="c"># Logs</span>
    <span class="nc">ErrorLog</span> ${APACHE_LOG_DIR}/error.log
    <span class="nc">CustomLog</span> ${APACHE_LOG_DIR}/access.log combined

    <span class="c"># Wildcard SSL/TLS Certificate files</span>
    <span class="nc">SSLEngine</span> <span class="ss">on</span>
    <span class="nc">SSLCertificateFile</span> /etc/ssl/certs/STAR_example_com.crt
    <span class="nc">SSLCertificateKeyFile</span> /etc/ssl/private/example.key
    <span class="nc">SSLCertificateChainFile</span> /etc/ssl/certs/example.ca-bundle

    <span class="c"># Standard script config</span>
    <span class="p">&lt;</span><span class="nl">FilesMatch</span><span class="sr"> "\.(cgi|shtml|phtml|php)$"</span><span class="p">&gt;
</span>        <span class="nc">SSLOptions</span> +StdEnvVars
    <span class="p">&lt;/</span><span class="nl">FilesMatch</span><span class="p">&gt;
</span>    <span class="p">&lt;</span><span class="nl">Directory</span><span class="sr"> /usr/lib/cgi-bin</span><span class="p">&gt;
</span>        <span class="nc">SSLOptions</span> +StdEnvVars
    <span class="p">&lt;/</span><span class="nl">Directory</span><span class="p">&gt;
</span>
    <span class="c"># Standard config for Internet Explorer</span>
    <span class="nc">BrowserMatch</span> "MSIE [2-6]" \
        nokeepalive ssl-unclean-shutdown \
        downgrade-1.0 force-response-1.0

    <span class="nc">BrowserMatch</span> "MSIE [17-9]" ssl-unclean-shutdown

<span class="p">&lt;/</span><span class="nl">VirtualHost</span><span class="p">&gt;
</span></code></pre></div></div>

<h2 id="tomcat-wildcard-subdomain-configuration">Tomcat Wildcard Subdomain Configuration</h2>

<p>Below you’ll find the configuration of Tomcat (in server.xml), which is quite standard. Actually, we do not need to define any <em>“wildcard”</em>, we just define a <code class="language-plaintext highlighter-rouge">defaultHost</code> in the <code class="language-plaintext highlighter-rouge">Engine</code> element. Then we deploy a <code class="language-plaintext highlighter-rouge">ROOT.war</code> in the webapps directory (<code class="language-plaintext highlighter-rouge">/opt/example.com/tomcat7/webapps</code>) to serve all content at the root context path.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;Service</span> <span class="na">name=</span><span class="s">"example"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;Connector</span> <span class="na">port=</span><span class="s">"9090"</span> <span class="na">protocol=</span><span class="s">"HTTP/1.1"</span> <span class="na">connectionTimeout=</span><span class="s">"20000"</span>
            <span class="na">URIEncoding=</span><span class="s">"UTF-8"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;Engine</span> <span class="na">name=</span><span class="s">"example"</span> <span class="na">defaultHost=</span><span class="s">"localhost"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;Host</span> <span class="na">name=</span><span class="s">"localhost"</span> <span class="na">appBase=</span><span class="s">"/opt/example.com/tomcat7/webapps"</span>
                <span class="na">unpackWARs=</span><span class="s">"true"</span> <span class="na">autoDeploy=</span><span class="s">"true"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;Valve</span> <span class="na">className=</span><span class="s">"org.apache.catalina.valves.AccessLogValve"</span>
                    <span class="na">directory=</span><span class="s">"logs"</span> <span class="na">prefix=</span><span class="s">"example.com_access_log."</span>
                    <span class="na">suffix=</span><span class="s">".txt"</span> <span class="na">pattern=</span><span class="s">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/Host&gt;</span>
    <span class="nt">&lt;/Engine&gt;</span>
<span class="nt">&lt;/Service&gt;</span>
</code></pre></div></div>

<h2 id="how-does-tomcat-know-the-subdomain">How does Tomcat Know the Subdomain?</h2>

<p>With this configuration, all content will be sent to Tomcat with “localhost” as the hostname. Fortunately, the <a href="https://httpd.apache.org/docs/current/mod/mod_proxy.html#x-headers">Apache reverse proxy will send extra request headers</a> to Tomcat, namely:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">X-Forwarded-For</code>: The IP address of the client.</li>
  <li><strong><code class="language-plaintext highlighter-rouge">X-Forwarded-Host</code>: The original host requested by the client in the Host HTTP request header.</strong></li>
  <li><code class="language-plaintext highlighter-rouge">X-Forwarded-Server</code>: The hostname of the proxy server.</li>
</ul>

<p>So in Tomcat (or any other servlet container), just use the Java code below to get the value of that header <code class="language-plaintext highlighter-rouge">X-Forwarded-Host</code> and you’ll know the subdomain.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">subdomain</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getHeader</span><span class="o">(</span><span class="s">"X-Forwarded-Host"</span><span class="o">);</span>
</code></pre></div></div>

<p>Alternatively, you may also use the <a href="https://httpd.apache.org/docs/current/mod/mod_proxy.html#proxypreservehost">ProxyPreserveHost</a> On directive in Apache configuration and you should be able to get the hostname (subdomain) normally in Tomcat. <em>NOTE: I haven’t tested that setup.</em></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">subdomain</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getServerName</span><span class="o">();</span>
</code></pre></div></div>

<h2 id="bonus-wildcard-ssl-certificate">Bonus: Wildcard SSL Certificate</h2>

<p>Of course you’ll need a wildcard SSL certificate. Those are usually very expensive, but <a href="https://www.namecheap.com/security/ssl-certificates/comodo/positivessl-wildcard.aspx">Namecheap resells Comodo wildcard certificate at very good price</a>. No, I do not have any interest in namecheap, they just happen to be very good at what they do 🙂</p>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[I recently had to configure HTTPS on a wildcard subdomain with Apache HTTP server as reverse proxy to a Tomcat backend. I had few more requirements:]]></summary></entry><entry><title type="html">Ubuntu Apache Reverse Proxy Rewrite HTML Links</title><link href="/tech/ubuntu-apache-reverse-proxy-rewrite-html-links/" rel="alternate" type="text/html" title="Ubuntu Apache Reverse Proxy Rewrite HTML Links" /><published>2014-11-07T00:00:00-05:00</published><updated>2014-11-07T00:00:00-05:00</updated><id>/tech/ubuntu-apache-reverse-proxy-rewrite-html-links</id><content type="html" xml:base="/tech/ubuntu-apache-reverse-proxy-rewrite-html-links/"><![CDATA[<p>I just spent few hours on this, so I will share a few tips. If you want to setup a reverse proxy and <strong>rewrite links in html</strong> pages, you can use Apache module <a href="https://httpd.apache.org/docs/current/mod/mod_proxy_html.html">mod_proxy_html</a>.</p>

<h2 id="step-1-install-and-enable-apache-mod_proxy">Step 1. Install and enable Apache mod_proxy</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>apt-get <span class="nb">install </span>libapache2-mod-proxy-html libxml2-dev
<span class="nv">$ </span><span class="nb">sudo </span>a2enmod proxy
<span class="nv">$ </span><span class="nb">sudo </span>a2enmod proxy_http
<span class="nv">$ </span><span class="nb">sudo </span>a2enmod proxy_html
<span class="nv">$ </span><span class="nb">sudo </span>a2enmod xml2enc
</code></pre></div></div>

<h2 id="step-2-apache-configuration">Step 2. Apache configuration</h2>

<p>In <strong>Ubuntu 14.04 LTS</strong>, it does not work “out of the box”, because some standard config is missing when enabling mod_proxy_html. More specifically, the <a href="https://httpd.apache.org/docs/current/mod/mod_proxy_html.html#proxyhtmllinks">ProxyHTMLLinks</a> directives are missing in Ubuntu 14.04. I say “missing”, because those directives are included by default in earlier releases and in other distros (in a file called proxy_html.conf). Also, pay particular attention to the directives <a href="https://httpd.apache.org/docs/current/mod/mod_proxy_html.html#proxyhtmlenable">ProxyHTMLEnable</a>, <a href="https://httpd.apache.org/docs/current/mod/mod_proxy_html.html#proxyhtmlextended">ProxyHTMLExtended</a> and <a href="https://httpd.apache.org/docs/current/mod/core.html#setoutputfilter">SetOutputFilter</a>.</p>

<p>So, let’s say you want to have your apache server at <code class="language-plaintext highlighter-rouge">http://host1.example.com/path1</code> to serve (proxy) the content of the server at <code class="language-plaintext highlighter-rouge">http://host2.example.com/path2</code> and <strong>rewrite HTML links</strong>. Here is the config that works for me on Ubuntu 14.04 LTS.</p>

<div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="nl">VirtualHost</span><span class="sr"> *:80</span><span class="p">&gt;
</span>    <span class="nc">ServerName</span> host1.example.com
    <span class="nc">ProxyRequests</span> <span class="ss">Off</span>
    <span class="p">&lt;</span><span class="nl">Location</span><span class="sr"> /path1</span><span class="p">&gt;
</span>        <span class="nc">ProxyHTMLLinks</span> a href
        <span class="nc">ProxyHTMLLinks</span> area href
        <span class="nc">ProxyHTMLLinks</span> link href
        <span class="nc">ProxyHTMLLinks</span> img src longdesc usemap
        <span class="nc">ProxyHTMLLinks</span> object classid codebase data usemap
        <span class="nc">ProxyHTMLLinks</span> q cite
        <span class="nc">ProxyHTMLLinks</span> blockquote cite
        <span class="nc">ProxyHTMLLinks</span> ins cite
        <span class="nc">ProxyHTMLLinks</span> del cite
        <span class="nc">ProxyHTMLLinks</span> <span class="ss">form</span> <span class="ss">action</span>
        <span class="nc">ProxyHTMLLinks</span> <span class="ss">input</span> src usemap
        <span class="nc">ProxyHTMLLinks</span> head profile
        <span class="nc">ProxyHTMLLinks</span> <span class="ss">base</span> href
        <span class="nc">ProxyHTMLLinks</span> <span class="ss">script</span> src for

        <span class="nc">ProxyHTMLEvents</span> onclick ondblclick onmousedown onmouseup \
            onmouseover onmousemove onmouseout onkeypress \
            onkeydown onkeyup onfocus onblur onload \
            onunload onsubmit onreset onselect onchange

        <span class="nc">ProxyPreserveHost</span> <span class="ss">On</span>
        <span class="nc">ProxyPass</span> http://host2.example.com/path2
        <span class="nc">ProxyPassReverse</span> http://host2.example.com/path2
        <span class="nc">ProxyHTMLEnable</span> <span class="ss">On</span>
        <span class="nc">ProxyHTMLExtended</span> <span class="ss">On</span>
        <span class="nc">SetOutputFilter</span> INFLATE;proxy-html;DEFLATE;
        <span class="nc">ProxyHTMLURLMap</span> http://host2.example.com/path2 /path1
    <span class="p">&lt;/</span><span class="nl">Location</span><span class="p">&gt;
&lt;/</span><span class="nl">VirtualHost</span><span class="p">&gt;
</span></code></pre></div></div>

<p><em>Author: <a href="https://www.linkedin.com/in/jonathan-demers-ing/" title="Jonathan Demers">Jonathan Demers</a></em></p>]]></content><author><name>OpCode Solutions</name><email>info@opcodesolutions.com</email></author><summary type="html"><![CDATA[I just spent few hours on this, so I will share a few tips. If you want to setup a reverse proxy and rewrite links in html pages, you can use Apache module mod_proxy_html.]]></summary></entry></feed>